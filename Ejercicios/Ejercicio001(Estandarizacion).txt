#Data to examine the correlation between the level of prostate-specific antigens and the number of clinical measures in men who are about to receive a radical prostatectomy.

#Features: lcavol log cancer volume, lweight log prostate weight, age in years, lbph log of the amount of benign prostatic hyperplasia, 
#svi seminal vesicle invasion, lcp log of capsular penetration, gleason a numeric vector,pgg45 percent of Gleason score 4 or 5, 
#lpsa response


# Load dataset from csv file
setwd("C:/Users/Nelson/Desktop/Curso Machine Learning/AFPCrecer/CursoEstudio/Clustering/Ejercicios/datasets")
data <- read.table("prostate.csv", header = TRUE, sep = ",", dec = ".",row.names=1) 
# Load dataset from package in CRAN
 suppressWarnings(
         suppressMessages(if
                          (!require(ElemStatLearn))
                 install.packages("ElemStatLearn")))
 library("ElemStatLearn")

# Create a data.frame named data
 
data(prostate)
data<-prostate[1:9]

# Show the head of dataset Before Recenter
 
 head(data[1:4])

      lcavol  lweight age      lbph
1 -0.5798185 2.769459  50 -1.386294
2 -0.9942523 3.319626  58 -1.386294
3 -0.5108256 2.691243  74 -1.386294
4 -1.2039728 3.282789  58 -1.386294
5  0.7514161 3.432373  62 -1.386294
6 -1.0498221 3.228826  50 -1.386294

# Using the scale function to recenter data (Z Score)

 recenter<-as.data.frame(scale(data[1:4]))
 # Show the head of dataset After Recenter 
 
 head(recenter)

      lcavol    lweight        age      lbph
1 -1.6373556 -2.0062118 -1.8624260 -1.024706
2 -1.9889805 -0.7220088 -0.7878962 -1.024706
3 -1.5788189 -2.1887840  1.3611634 -1.024706
4 -2.1669171 -0.8079939 -0.7878962 -1.024706
5 -0.5078745 -0.4588340 -0.2506313 -1.024706
6 -2.0361285 -0.9339546 -1.8624260 -1.024706

# comparing correlations 
 
 # Data before transformation 
cor(data[1:4])
           lcavol   lweight       age      lbph
lcavol  1.0000000 0.2805214 0.2249999 0.0273497
lweight 0.2805214 1.0000000 0.3479691 0.4422644
age     0.2249999 0.3479691 1.0000000 0.3501859
lbph    0.0273497 0.4422644 0.3501859 1.0000000

# Data after transformation
cor(recenter)
           lcavol   lweight       age      lbph
lcavol  1.0000000 0.2805214 0.2249999 0.0273497
lweight 0.2805214 1.0000000 0.3479691 0.4422644
age     0.2249999 0.3479691 1.0000000 0.3501859
lbph    0.0273497 0.4422644 0.3501859 1.0000000

# Transform variables by rescaling. 
 # Rescale lcavol
 data[["RRC_lcavol"]] <- data[["lcavol"]]
 
 # Recenter and rescale data
         data[["RRC_lcavol"]] <-
                 scale(data[["lcavol"]])[,1]
 
 # Rescale lweight
         data[["RRC_lweight"]] <- data[["lweight"]]

 # Recenter and rescale data
         data[["RRC_lweight"]] <-
                 scale(data[["lweight"]])[,1]
         
 # Show the original and recenter together
 head(data[c('lcavol','RRC_lcavol','lweight',
             'RRC_lweight')])

      lcavol RRC_lcavol  lweight RRC_lweight
1 -0.5798185 -1.6373556 2.769459  -2.0062118
2 -0.9942523 -1.9889805 3.319626  -0.7220088
3 -0.5108256 -1.5788189 2.691243  -2.1887840
4 -1.2039728 -2.1669171 3.282789  -0.8079939
5  0.7514161 -0.5078745 3.432373  -0.4588340
6 -1.0498221 -2.0361285 3.228826  -0.9339546



#--------------------------------------------------------------
#--------------------------------------------------------------
# Scale [0-1]
# Transform variables by rescaling. 
 
 #Loading or installing package reshape
 suppressWarnings(
         suppressMessages(if
                          (!require(reshape, quietly=TRUE))
                 install.packages("reshape")))
 library("reshape")
 
 # Rescaling data to Scale [0-1] using reshape
 
dataR01<-rescaler(data, "range")
 # Comparing original vs scaled

 tail(data[1:4])
 
     lcavol  lweight age       lbph
92 2.532903 3.677566  61  1.3480732
93 2.830268 3.876396  68 -1.3862944
94 3.821004 3.896909  44 -1.3862944
95 2.907447 3.396185  52 -1.3862944
96 2.882564 3.773910  68  1.5581446
97 3.471966 3.974998  68  0.4382549

tail(dataR01[1:4])

      lcavol   lweight        age      lbph
92 0.7507582 0.5415392 0.52631579 0.7365109
93 0.8082970 0.6241964 0.71052632 0.0000000
94 1.0000000 0.6327240 0.07894737 0.0000000
95 0.8232309 0.4245640 0.28947368 0.0000000
96 0.8184160 0.5815911 0.71052632 0.7930944
97 0.9324629 0.6651870 0.71052632 0.4914484



#---------------------------------------------------------------------
#---------------------------------------------------------------------
# Median & MAD
# Transform variables by rescaling. 
 #Loading or installing package reshape
 suppressWarnings(
         suppressMessages(if
                          (!require(reshape, quietly=TRUE))
                 install.packages("reshape")))
 library("reshape")
 # Rescaling data to Scale [0-1] using reshape

 dataMAD<-rescaler(data, "robust")
 
 # Comparing original vs scaled

 head(data[1:4])
      lcavol  lweight age      lbph
1 -0.5798185 2.769459  50 -1.386294
2 -0.9942523 3.319626  58 -1.386294
3 -0.5108256 2.691243  74 -1.386294

head(dataMAD[1:4])
      lcavol    lweight        age       lbph
1 -1.5809071 -2.2720412 -2.5293403 -0.6744908
2 -1.9041761 -0.8075634 -1.1803588 -0.6744908
3 -1.5270909 -2.4802427  1.5176042 -0.6744908
4 -2.0677635 -0.9056190 -1.1803588 -0.6744908
5 -0.5425101 -0.5074446 -0.5058681 -0.6744908
6 -1.9475220 -1.0492620 -2.5293403 -0.6744908


#------------------------------------------------------------
#------------------------------------------------------------
# LogN transformation for Age 
 dataLogN <- log(data$age)
 # Replace Inf's
 dataLogN[dataLogN == -Inf] <- NA
 # Comparing original vs scaled
 
head(data$age)

[1] 50 58 74 58 62 50

head(dataLogN)

[1] 3.912023 4.060443 4.304065 4.060443 4.127134 3.912023